{"version":3,"sources":["components/Layout/Layout.js","components/Backdrop/Backdrop.js","components/Toolbar/Toolbar.js","components/Navigation/MobileToggle/MobileToggle.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/MainNavigation/MainNavigation.js","components/Navigation/MobileNavigation/MobileNavigation.js","components/Button/Button.js","components/Modal/Modal.js","components/ErrorHandler/ErrorHandler.js","components/Feed/Post/Post.js","components/Form/Input/Input.js","components/Form/Input/FilePicker.js","components/Image/Image.js","util/validators.js","util/image.js","components/Feed/FeedEdit/FeedEdit.js","components/Paginator/Paginator.js","components/Loader/Loader.js","pages/Feed/Feed.js","pages/Feed/SinglePost/SinglePost.js","pages/Auth/Auth.js","pages/Auth/Login.js","pages/Auth/Signup.js","App.js","index.js"],"names":["layout","props","React","createElement","Fragment","className","header","mobileNav","children","backdrop","ReactDOM","createPortal","open","join","onClick","document","getElementById","toolbar","mobileToggle","onOpen","logo","navItems","id","text","link","auth","navigationItems","concat","_toConsumableArray","filter","item","isAuth","map","key","mobile","NavLink","to","exact","onChoose","onLogout","mainNavigation","MobileToggle","onOpenMobileNav","Logo","NavigationItems","mobileNavigation","onChooseItem","button","Link","design","mode","disabled","loading","type","modal","title","Button","onCancelModal","onAcceptModal","acceptEnabled","isLoading","errorHandler","error","Backdrop","onHandle","Modal","message","post","author","name","date","onStartEdit","onDelete","input","label","htmlFor","control","valid","touched","required","value","placeholder","onChange","e","target","files","onBlur","rows","filePicker","image","style","backgroundImage","imageUrl","backgroundSize","contain","backgroundPosition","left","trim","length","config","isValid","min","max","email","test","generateBase64FromImage","imageFile","reader","FileReader","promise","Promise","resolve","reject","onload","result","onerror","err","readAsDataURL","POST_FORM","validators","content","FeedEdit","_Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","state","postForm","formIsValid","imagePreview","postInputChangeHandler","then","b64","setState","catch","prevState","_step","_iterator","_createForOfIteratorHelper","s","n","done","validator","f","updatedForm","_objectSpread","_defineProperty","inputName","inputBlurHandler","cancelPostChangeHandler","onCancelEdit","acceptPostChangeHandler","onFinishEdit","_inherits","_createClass","prevProps","editing","selectedPost","imagePath","Input","bind","FilePicker","Image","Component","paginator","currentPage","onPrevious","lastPage","onNext","loader","Feed","isEditing","posts","totalPosts","editPost","status","postPage","postsLoading","editLoading","loadPosts","direction","page","graphqlQuery","query","fetch","method","headers","authorization","token","Content-Type","body","JSON","stringify","res","json","resData","errors","Error","console","log","data","getPosts","catchError","statusUpdateHandler","event","preventDefault","newPostHandler","startEditPostHandler","postId","find","p","_id","cancelEditHandler","finishEditHandler","postData","formData","FormData","append","fileResData","filePath","resDataFiled","creator","createdAt","updatedPosts","updatedTotalPosts","findIndex","pop","unshift","statusInputChangeHandler","deletePostHandler","_this2","getUserStatus","_this3","ErrorHandler","onSubmit","textAlign","marginTop","Loader","Paginator","Math","ceil","Post","Date","toLocaleDateString","SinglePost","match","params","viewPost","Login","loginForm","password","inputChangeHandler","Auth","onLogin","Signup","signupForm","onSignup","App","showBackdrop","showMobileNav","userId","authLoading","mobileNavHandler","isOpen","backdropClickHandler","logoutHandler","localStorage","removeItem","loginHandler","authData","login","setItem","expiryDate","getTime","toISOString","setAutoLogout","signupHandler","history","replace","milliseconds","setTimeout","getItem","remainingMilliseconds","routes","Switch","Route","path","render","LoginPage","Object","assign","SignupPage","Redirect","FeedPage","SinglePostPage","Layout","Toolbar","MainNavigation","MobileNavigation","withRouter","BrowserRouter"],"mappings":"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","file":"static/js/main.bbbfd113.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\n\nimport './Layout.css';\n\nconst layout = props => (\n  <Fragment>\n    <header className=\"main-header\">{props.header}</header>\n    {props.mobileNav}\n    <main className=\"content\">{props.children}</main>\n  </Fragment>\n);\n\nexport default layout;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst backdrop = props =>\n  ReactDOM.createPortal(\n    <div\n      className={['backdrop', props.open ? 'open' : ''].join(' ')}\n      onClick={props.onClick}\n    />,\n    document.getElementById('backdrop-root')\n  );\n\nexport default backdrop;\n","import React from 'react';\n\nimport './Toolbar.css';\n\nconst toolbar = props => (\n    <div className=\"toolbar\">\n       {props.children}\n    </div>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport './MobileToggle.css';\n\nconst mobileToggle = props => (\n  <button className=\"mobile-toggle\" onClick={props.onOpen}>\n    <span className=\"mobile-toggle__bar\" />\n    <span className=\"mobile-toggle__bar\" />\n    <span className=\"mobile-toggle__bar\" />\n  </button>\n);\n\nexport default mobileToggle;\n","import React from 'react';\n\nimport './Logo.css';\n\nconst logo = props => <h1 className=\"logo\">MessageNode</h1>;\n\nexport default logo;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './NavigationItems.css';\n\nconst navItems = [\n  { id: 'feed', text: 'Feed', link: '/', auth: true },\n  { id: 'login', text: 'Login', link: '/', auth: false },\n  { id: 'signup', text: 'Signup', link: '/signup', auth: false }\n];\n\nconst navigationItems = props => [\n  ...navItems.filter(item => item.auth === props.isAuth).map(item => (\n    <li\n      key={item.id}\n      className={['navigation-item', props.mobile ? 'mobile' : ''].join(' ')}\n    >\n      <NavLink to={item.link} exact onClick={props.onChoose}>\n        {item.text}\n      </NavLink>\n    </li>\n  )),\n  props.isAuth && (\n    <li className=\"navigation-item\" key=\"logout\">\n      <button onClick={props.onLogout}>Logout</button>\n    </li>\n  )\n];\n\nexport default navigationItems;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport MobileToggle from '../MobileToggle/MobileToggle';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\n\nimport './MainNavigation.css';\n\nconst mainNavigation = props => (\n  <nav className=\"main-nav\">\n    <MobileToggle onOpen={props.onOpenMobileNav} />\n    <div className=\"main-nav__logo\">\n      <NavLink to=\"/\">\n        <Logo />\n      </NavLink>\n    </div>\n    <div className=\"spacer\" />\n    <ul className=\"main-nav__items\">\n      <NavigationItems isAuth={props.isAuth} onLogout={props.onLogout} />\n    </ul>\n  </nav>\n);\n\nexport default mainNavigation;\n","import React from 'react';\n\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport './MobileNavigation.css';\n\nconst mobileNavigation = props => (\n  <nav className={['mobile-nav', props.open ? 'open' : ''].join(' ')}>\n    <ul\n      className={['mobile-nav__items', props.mobile ? 'mobile' : ''].join(' ')}\n    >\n      <NavigationItems\n        mobile\n        onChoose={props.onChooseItem}\n        isAuth={props.isAuth}\n        onLogout={props.onLogout}\n      />\n    </ul>\n  </nav>\n);\n\nexport default mobileNavigation;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst button = props =>\n  !props.link ? (\n    <button\n      className={[\n        'button',\n        `button--${props.design}`,\n        `button--${props.mode}`\n      ].join(' ')}\n      onClick={props.onClick}\n      disabled={props.disabled || props.loading}\n      type={props.type}\n    >\n      {props.loading ? 'Loading...' : props.children}\n    </button>\n  ) : (\n    <Link\n      className={[\n        'button',\n        `button--${props.design}`,\n        `button--${props.mode}`\n      ].join(' ')}\n      to={props.link}\n    >\n      {props.children}\n    </Link>\n  );\n\nexport default button;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Button from '../Button/Button';\nimport './Modal.css';\n\nconst modal = props =>\n  ReactDOM.createPortal(\n    <div className=\"modal\">\n      <header className=\"modal__header\">\n        <h1>{props.title}</h1>\n      </header>\n      <div className=\"modal__content\">{props.children}</div>\n      <div className=\"modal__actions\">\n        <Button design=\"danger\" mode=\"flat\" onClick={props.onCancelModal}>\n          Cancel\n        </Button>\n        <Button\n          mode=\"raised\"\n          onClick={props.onAcceptModal}\n          disabled={!props.acceptEnabled}\n          loading={props.isLoading}\n        >\n          Accept\n        </Button>\n      </div>\n    </div>,\n    document.getElementById('modal-root')\n  );\n\nexport default modal;\n","import React, { Fragment } from 'react';\n\nimport Backdrop from '../Backdrop/Backdrop';\nimport Modal from '../Modal/Modal';\n\nconst errorHandler = props => (\n  <Fragment>\n    {props.error && <Backdrop onClick={props.onHandle} />}\n    {props.error && (\n      <Modal\n        title=\"An Error Occurred\"\n        onCancelModal={props.onHandle}\n        onAcceptModal={props.onHandle}\n        acceptEnabled\n      >\n        <p>{props.error.message}</p>\n      </Modal>\n    )}\n  </Fragment>\n);\n\nexport default errorHandler;\n","import React from \"react\";\n\nimport Button from \"../../Button/Button\";\nimport \"./Post.css\";\n\nconst post = (props) => (\n  <article className=\"post\">\n    <header className=\"post__header\">\n      <h3 className=\"post__meta\">\n        Posted by {props.author.name} on {props.date}\n      </h3>\n      <h1 className=\"post__title\">{props.title}</h1>\n    </header>\n    {/* <div className=\"post__image\">\n      <Image imageUrl={props.image} contain />\n    </div>\n    <div className=\"post__content\">{props.content}</div> */}\n    <div className=\"post__actions\">\n      <Button mode=\"flat\" link={props.id}>\n        View\n      </Button>\n      <Button mode=\"flat\" onClick={props.onStartEdit}>\n        Edit\n      </Button>\n      <Button mode=\"flat\" design=\"danger\" onClick={props.onDelete}>\n        Delete\n      </Button>\n    </div>\n  </article>\n);\n\nexport default post;\n","import React from 'react';\n\nimport './Input.css';\n\nconst input = props => (\n  <div className=\"input\">\n    {props.label && <label htmlFor={props.id}>{props.label}</label>}\n    {props.control === 'input' && (\n      <input\n        className={[\n          !props.valid ? 'invalid' : 'valid',\n          props.touched ? 'touched' : 'untouched'\n        ].join(' ')}\n        type={props.type}\n        id={props.id}\n        required={props.required}\n        value={props.value}\n        placeholder={props.placeholder}\n        onChange={e => props.onChange(props.id, e.target.value, e.target.files)}\n        onBlur={props.onBlur}\n      />\n    )}\n    {props.control === 'textarea' && (\n      <textarea\n        className={[\n          !props.valid ? 'invalid' : 'valid',\n          props.touched ? 'touched' : 'untouched'\n        ].join(' ')}\n        id={props.id}\n        rows={props.rows}\n        required={props.required}\n        value={props.value}\n        onChange={e => props.onChange(props.id, e.target.value)}\n        onBlur={props.onBlur}\n      />\n    )}\n  </div>\n);\n\nexport default input;\n","import React from 'react';\n\nimport './Input.css';\n\nconst filePicker = props => (\n  <div className=\"input\">\n    <label htmlFor={props.id}>{props.label}</label>\n    <input\n      className={[\n        !props.valid ? 'invalid' : 'valid',\n        props.touched ? 'touched' : 'untouched'\n      ].join(' ')}\n      type=\"file\"\n      id={props.id}\n      onChange={e => props.onChange(props.id, e.target.value, e.target.files)}\n      onBlur={props.onBlur}\n    />\n  </div>\n);\n\nexport default filePicker;\n","import React from 'react';\n\nimport './Image.css';\n\nconst image = props => (\n  <div\n    className=\"image\"\n    style={{\n      backgroundImage: `url('${props.imageUrl}')`,\n      backgroundSize: props.contain ? 'contain' : 'cover',\n      backgroundPosition: props.left ? 'left' : 'center'\n    }}\n  />\n);\n\nexport default image;\n","export const required = value => value.trim() !== '';\n\nexport const length = config => value => {\n  let isValid = true;\n  if (config.min) {\n    isValid = isValid && value.trim().length >= config.min;\n  }\n  if (config.max) {\n    isValid = isValid && value.trim().length <= config.max;\n  }\n  return isValid;\n};\n\nexport const email = value =>\n  /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(\n    value\n  );\n","export const generateBase64FromImage = imageFile => {\n  const reader = new FileReader();\n  const promise = new Promise((resolve, reject) => {\n    reader.onload = e => resolve(e.target.result);\n    reader.onerror = err => reject(err);\n  });\n\n  reader.readAsDataURL(imageFile);\n  return promise;\n};\n","import React, { Component, Fragment } from 'react';\n\nimport Backdrop from '../../Backdrop/Backdrop';\nimport Modal from '../../Modal/Modal';\nimport Input from '../../Form/Input/Input';\nimport FilePicker from '../../Form/Input/FilePicker';\nimport Image from '../../Image/Image';\nimport { required, length } from '../../../util/validators';\nimport { generateBase64FromImage } from '../../../util/image';\n\nconst POST_FORM = {\n  title: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })]\n  },\n  image: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required]\n  },\n  content: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })]\n  }\n};\n\nclass FeedEdit extends Component {\n  state = {\n    postForm: POST_FORM,\n    formIsValid: false,\n    imagePreview: null\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.editing &&\n      prevProps.editing !== this.props.editing &&\n      prevProps.selectedPost !== this.props.selectedPost\n    ) {\n      const postForm = {\n        title: {\n          ...prevState.postForm.title,\n          value: this.props.selectedPost.title,\n          valid: true\n        },\n        image: {\n          ...prevState.postForm.image,\n          value: this.props.selectedPost.imagePath,\n          valid: true\n        },\n        content: {\n          ...prevState.postForm.content,\n          value: this.props.selectedPost.content,\n          valid: true\n        }\n      };\n      this.setState({ postForm: postForm, formIsValid: true });\n    }\n  }\n\n  postInputChangeHandler = (input, value, files) => {\n    if (files) {\n      generateBase64FromImage(files[0])\n        .then(b64 => {\n          this.setState({ imagePreview: b64 });\n        })\n        .catch(e => {\n          this.setState({ imagePreview: null });\n        });\n    }\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.postForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.postForm,\n        [input]: {\n          ...prevState.postForm[input],\n          valid: isValid,\n          value: files ? files[0] : value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        postForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        postForm: {\n          ...prevState.postForm,\n          [input]: {\n            ...prevState.postForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  cancelPostChangeHandler = () => {\n    this.setState({\n      postForm: POST_FORM,\n      formIsValid: false\n    });\n    this.props.onCancelEdit();\n  };\n\n  acceptPostChangeHandler = () => {\n    const post = {\n      title: this.state.postForm.title.value,\n      image: this.state.postForm.image.value,\n      content: this.state.postForm.content.value\n    };\n    this.props.onFinishEdit(post);\n    this.setState({\n      postForm: POST_FORM,\n      formIsValid: false,\n      imagePreview: null\n    });\n  };\n\n  render() {\n    return this.props.editing ? (\n      <Fragment>\n        <Backdrop onClick={this.cancelPostChangeHandler} />\n        <Modal\n          title=\"New Post\"\n          acceptEnabled={this.state.formIsValid}\n          onCancelModal={this.cancelPostChangeHandler}\n          onAcceptModal={this.acceptPostChangeHandler}\n          isLoading={this.props.loading}\n        >\n          <form>\n            <Input\n              id=\"title\"\n              label=\"Title\"\n              control=\"input\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'title')}\n              valid={this.state.postForm['title'].valid}\n              touched={this.state.postForm['title'].touched}\n              value={this.state.postForm['title'].value}\n            />\n            <FilePicker\n              id=\"image\"\n              label=\"Image\"\n              control=\"input\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'image')}\n              valid={this.state.postForm['image'].valid}\n              touched={this.state.postForm['image'].touched}\n            />\n            <div className=\"new-post__preview-image\">\n              {!this.state.imagePreview && <p>Please choose an image.</p>}\n              {this.state.imagePreview && (\n                <Image imageUrl={this.state.imagePreview} contain left />\n              )}\n            </div>\n            <Input\n              id=\"content\"\n              label=\"Content\"\n              control=\"textarea\"\n              rows=\"5\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'content')}\n              valid={this.state.postForm['content'].valid}\n              touched={this.state.postForm['content'].touched}\n              value={this.state.postForm['content'].value}\n            />\n          </form>\n        </Modal>\n      </Fragment>\n    ) : null;\n  }\n}\n\nexport default FeedEdit;\n","import React from 'react';\n\nimport './Paginator.css';\n\nconst paginator = props => (\n  <div className=\"paginator\">\n    {props.children}\n    <div className=\"paginator__controls\">\n      {props.currentPage > 1 && (\n        <button className=\"paginator__control\" onClick={props.onPrevious}>\n          Previous\n        </button>\n      )}\n      {props.currentPage < props.lastPage && (\n        <button className=\"paginator__control\" onClick={props.onNext}>\n          Next\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nexport default paginator;\n","import React from 'react';\n\nimport './Loader.css';\n\nconst loader = props => (\n  <div className=\"loader\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default loader;\n","import React, { Component, Fragment } from \"react\";\n\n//import openSocket from \"socket.io-client\";\n\nimport Post from \"../../components/Feed/Post/Post\";\nimport Button from \"../../components/Button/Button\";\nimport FeedEdit from \"../../components/Feed/FeedEdit/FeedEdit\";\nimport Input from \"../../components/Form/Input/Input\";\nimport Paginator from \"../../components/Paginator/Paginator\";\nimport Loader from \"../../components/Loader/Loader\";\nimport ErrorHandler from \"../../components/ErrorHandler/ErrorHandler\";\nimport \"./Feed.css\";\n\nclass Feed extends Component {\n  state = {\n    isEditing: false,\n    posts: [],\n    totalPosts: 0,\n    editPost: null,\n    status: \"\",\n    postPage: 1,\n    postsLoading: true,\n    editLoading: false,\n  };\n\n  componentDidMount() {\n    const graphqlQuery = {\n      query: `\n      {\n        getUserStatus  {\n          status\n        }\n      }\n      `,\n    };\n\n    fetch(\"http://localhost:8080/graphql\", {\n      headers: {\n        authorization: \"Bearer \" + this.props.token,\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"POST\",\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        // if (res.status !== 200) {\n        //   throw new Error(\"Failed to fetch user status.\");\n        // }\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.errors) {\n          throw new Error(\"Fetching user status failed!\");\n        }\n        this.setState({ status: resData.data.getUserStatus.status });\n      })\n      .catch(this.catchError);\n\n    this.loadPosts();\n\n    // SocketIO connection code:\n    // const socket = openSocket(\"http://localhost:8080\");\n\n    // socket.on(\"posts\", (data) => {\n    //   if (data.action === \"create\") {\n    //     this.addPost(data.post);\n    //   } else if (data.action === \"update\") {\n    //     this.updatePost(data.post);\n    //   } else if (data.action === \"delete\") {\n    //     this.loadPosts();\n    //   }\n    // });\n  }\n\n  // Functions to handle adding/updating posts using SocketIO:\n  // addPost = (post) => {\n  //   this.setState((prevState) => {\n  //     const updatedPosts = [...prevState.posts];\n  //     if (prevState.postPage === 1) {\n  //       if (prevState.posts.length >= 2) {\n  //         updatedPosts.pop();\n  //       }\n  //       updatedPosts.unshift(post);\n  //     }\n  //     return {\n  //       posts: updatedPosts,\n  //       totalPosts: prevState.totalPosts + 1,\n  //     };\n  //   });\n  // };\n  // updatePost = (post) => {\n  //   this.setState((prevState) => {\n  //     const updatedPosts = [...prevState.posts];\n  //     const updatedPostIndex = updatedPosts.findIndex(\n  //       (p) => p._id === post._id\n  //     );\n  //     if (updatedPostIndex > -1) {\n  //       updatedPosts[updatedPostIndex] = post;\n  //     }\n  //     return {\n  //       posts: updatedPosts,\n  //     };\n  //   });\n  // };\n\n  loadPosts = (direction) => {\n    if (direction) {\n      this.setState({ postsLoading: true, posts: [] });\n    }\n    let page = this.state.postPage;\n    if (direction === \"next\") {\n      page++;\n      this.setState({ postPage: page });\n    }\n    if (direction === \"previous\") {\n      page--;\n      this.setState({ postPage: page });\n    }\n    // REST \"http://localhost:8080/feed/posts?page=\"+ page\n    const graphqlQuery = {\n      query: `\n      {\n        getPosts (page: ${page}) {\n          posts {\n            _id\n            title\n            content\n            imageUrl\n            creator {\n              name\n            }\n            createdAt\n          }\n          totalPosts\n        }\n      }\n      `,\n    };\n    fetch(\"http://localhost:8080/graphql\", {\n      method: \"POST\",\n      headers: {\n        authorization: \"Bearer \" + this.props.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        // if (res.status !== 200) {\n        //   throw new Error(\"Failed to fetch posts.\");\n        // }\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.errors) {\n          throw new Error(\"User creation failed!\");\n        }\n        console.log(resData);\n        this.setState({\n          posts: resData.data.getPosts.posts.map((post) => {\n            return {\n              ...post,\n              imagePath: post.imageUrl,\n            };\n          }),\n          totalPosts: resData.data.getPosts.totalPosts,\n          postsLoading: false,\n        });\n      })\n      .catch(this.catchError);\n  };\n\n  statusUpdateHandler = (event) => {\n    event.preventDefault();\n    const graphqlQuery = {\n      query: `\n      mutation {\n        updateUserStatus(status: \"${this.state.status}\")  {\n          status\n        }\n      }\n      `,\n    };\n    fetch(\"http://localhost:8080/graphql\", {\n      method: \"POST\",\n      headers: {\n        authorization: \"Bearer \" + this.props.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        // if (res.status !== 200 && res.status !== 201) {\n        //   throw new Error(\"Can't update status!\");\n        // }\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.errors) {\n          throw new Error(\"Updating user status failed!\");\n        }\n        console.log(resData);\n      })\n      .catch(this.catchError);\n  };\n\n  newPostHandler = () => {\n    this.setState({ isEditing: true });\n  };\n\n  startEditPostHandler = (postId) => {\n    this.setState((prevState) => {\n      const loadedPost = { ...prevState.posts.find((p) => p._id === postId) };\n\n      return {\n        isEditing: true,\n        editPost: loadedPost,\n      };\n    });\n  };\n\n  cancelEditHandler = () => {\n    this.setState({ isEditing: false, editPost: null });\n  };\n\n  finishEditHandler = (postData) => {\n    this.setState({\n      editLoading: true,\n    });\n\n    // Set up data (with image!)\n    // REST config\n    // let url = \"http://localhost:8080/feed/post\";\n    // let method = \"POST\";\n    // if (this.state.editPost) {\n    //   url = \"http://localhost:8080/feed/post/\" + this.state.editPost._id;\n    //   method = \"PUT\";\n    // }\n    const formData = new FormData();\n    // formData.append(\"title\", postData.title);\n    // formData.append(\"content\", postData.content);\n    formData.append(\"image\", postData.image);\n\n    if (this.state.editPost) {\n      formData.append(\"oldPath\", this.state.editPost.imagePath);\n    }\n    fetch(\"http://localhost:8080/post-image\", {\n      headers: {\n        authorization: \"Bearer \" + this.props.token,\n      },\n      method: \"PUT\",\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((fileResData) => {\n        const imageUrl = fileResData.filePath;\n        console.log(fileResData);\n        let graphqlQuery = {\n          query: `\n          mutation {\n            createPost(postInput: { title: \"${postData.title}\", content: \"${postData.content}\", imageUrl: \"${imageUrl}\"}) {\n              _id\n              title\n              content\n              imageUrl\n              creator {\n                name\n              }\n              createdAt\n            }\n          }\n          `,\n        };\n        if (this.state.editPost) {\n          graphqlQuery = {\n            query: `\n              mutation {\n                updatePost(id: \"${this.state.editPost._id}\", postInput: { title: \"${postData.title}\", content: \"${postData.content}\", imageUrl: \"${imageUrl}\"}) {\n                  _id\n                  title\n                  content\n                  imageUrl\n                  creator {\n                    name\n                  }\n                  createdAt\n                }\n              }\n              `,\n          };\n        }\n        return fetch(\"http://localhost:8080/graphql\", {\n          headers: {\n            authorization: \"Bearer \" + this.props.token,\n            \"Content-Type\": \"application/json\",\n          },\n          method: \"POST\",\n          body: JSON.stringify(graphqlQuery),\n        });\n      })\n      .then((res) => {\n        // REST config to handle errors\n        // if (res.status !== 200 && res.status !== 201) {\n        //   throw new Error(\"Creating or editing a post failed!\");\n        // }\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.errors && resData.errors[0].status === 422) {\n          throw new Error(\n            \"Validation failed. Make sure the email is not used yet!\"\n          );\n        }\n        if (resData.errors) {\n          throw new Error(\"Post creation failed!\");\n        }\n        let resDataFiled = \"createPost\";\n        if (this.state.editPost) {\n          resDataFiled = \"updatePost\";\n        }\n        console.log(\"EditingMode:\", resDataFiled);\n\n        const post = {\n          _id: resData.data[resDataFiled]._id,\n          title: resData.data[resDataFiled].title,\n          content: resData.data[resDataFiled].content,\n          creator: resData.data[resDataFiled].creator.name,\n          createdAt: resData.data[resDataFiled].createdAt,\n          imageUrl: resData.data[resDataFiled].imageUrl,\n        };\n        this.setState((prevState) => {\n          let updatedPosts = [...prevState.posts];\n          let updatedTotalPosts = prevState.totalPosts;\n          if (prevState.editPost) {\n            const postIndex = prevState.posts.findIndex(\n              (p) => p._id === prevState.editPost._id\n            );\n            updatedPosts[postIndex] = post;\n          } else {\n            updatedTotalPosts++;\n            if (prevState.posts.length >= 2) {\n              updatedPosts.pop();\n            }\n            updatedPosts.unshift(post);\n          }\n          return {\n            posts: updatedPosts,\n            isEditing: false,\n            editPost: null,\n            editLoading: false,\n            totalPosts: updatedTotalPosts,\n          };\n        });\n        this.setState((prevState) => {\n          return {\n            isEditing: false,\n            editPost: null,\n            editLoading: false,\n          };\n        });\n      })\n      .catch((err) => {\n        console.log(\"ERROR:\", err);\n        this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err,\n        });\n      });\n    // REST config\n    // const post = {\n    //   _id: resData.post._id,\n    //   title: resData.post.title,\n    //   content: resData.post.content,\n    //   creator: resData.post.creator.name,\n    //   createdAt: resData.post.createdAt,\n    // };\n  };\n\n  statusInputChangeHandler = (input, value) => {\n    this.setState({ status: value });\n  };\n\n  deletePostHandler = (postId) => {\n    this.setState({ postsLoading: true });\n    // REST \"http://localhost:8080/feed/post/\" + postId\n\n    const graphqlQuery = {\n      query: `\n        mutation {\n          deletePost(id: \"${postId}\")\n        }\n        `,\n    };\n\n    fetch(\"http://localhost:8080/graphql\", {\n      headers: {\n        authorization: \"Bearer \" + this.props.token,\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"POST\",\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        // if (res.status !== 200 && res.status !== 201) {\n        //   throw new Error(\"Deleting a post failed!\");\n        // }\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.errors) {\n          throw new Error(\"Post deletion failed!\");\n        }\n        this.loadPosts();\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({ postsLoading: false });\n      });\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  catchError = (error) => {\n    this.setState({ error: error });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <FeedEdit\n          editing={this.state.isEditing}\n          selectedPost={this.state.editPost}\n          loading={this.state.editLoading}\n          onCancelEdit={this.cancelEditHandler}\n          onFinishEdit={this.finishEditHandler}\n        />\n        <section className=\"feed__status\">\n          <form onSubmit={this.statusUpdateHandler}>\n            <Input\n              type=\"text\"\n              placeholder=\"Your status\"\n              control=\"input\"\n              onChange={this.statusInputChangeHandler}\n              value={this.state.status}\n            />\n            <Button mode=\"flat\" type=\"submit\">\n              Update\n            </Button>\n          </form>\n        </section>\n        <section className=\"feed__control\">\n          <Button mode=\"raised\" design=\"accent\" onClick={this.newPostHandler}>\n            New Post\n          </Button>\n        </section>\n        <section className=\"feed\">\n          {this.state.postsLoading && (\n            <div style={{ textAlign: \"center\", marginTop: \"2rem\" }}>\n              <Loader />\n            </div>\n          )}\n          {this.state.posts.length <= 0 && !this.state.postsLoading ? (\n            <p style={{ textAlign: \"center\" }}>No posts found.</p>\n          ) : null}\n          {!this.state.postsLoading && (\n            <Paginator\n              onPrevious={this.loadPosts.bind(this, \"previous\")}\n              onNext={this.loadPosts.bind(this, \"next\")}\n              lastPage={Math.ceil(this.state.totalPosts / 2)}\n              currentPage={this.state.postPage}\n            >\n              {this.state.posts.map((post) => (\n                <Post\n                  key={post._id}\n                  id={post._id}\n                  author={post.creator}\n                  date={new Date(post.createdAt).toLocaleDateString(\"en-US\")}\n                  title={post.title}\n                  image={post.imageUrl}\n                  content={post.content}\n                  onStartEdit={this.startEditPostHandler.bind(this, post._id)}\n                  onDelete={this.deletePostHandler.bind(this, post._id)}\n                />\n              ))}\n            </Paginator>\n          )}\n        </section>\n      </Fragment>\n    );\n  }\n}\n\nexport default Feed;\n","import React, { Component } from \"react\";\n\nimport Image from \"../../../components/Image/Image\";\nimport \"./SinglePost.css\";\n\nclass SinglePost extends Component {\n  state = {\n    title: \"\",\n    author: \"\",\n    date: \"\",\n    image: \"\",\n    content: \"\",\n  };\n\n  componentDidMount() {\n    // REST route http://localhost:8080/feed/post/${postId}`\n    const postId = this.props.match.params.postId;\n    console.log(\"postId react: \", postId);\n    const graphqlQuery = {\n      query: `\n      {\n        viewPost(id: \"${postId}\") {\n            title\n            creator {\n              name\n                }\n            imageUrl\n            content\n            createdAt\n        }\n      }\n    `,\n    };\n    fetch(\"http://localhost:8080/graphql\", {\n      headers: {\n        authorization: \"Bearer \" + this.props.token,\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"POST\",\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        // if (res.status !== 200) {\n        //   throw new Error(\"Failed to fetch status\");\n        // }\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.errors) {\n          throw new Error(\"Fetching post failed!\");\n        }\n        console.log(\"singlePostData:\", resData);\n        this.setState({\n          title: resData.data.viewPost.title,\n          author: resData.data.viewPost.creator.name,\n          image: \"http://localhost:8080/\" + resData.data.viewPost.imageUrl,\n          date: new Date(resData.data.viewPost.createdAt).toLocaleDateString(\n            \"en-US\"\n          ),\n          content: resData.data.viewPost.content,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <section className=\"single-post\">\n        <h1>{this.state.title}</h1>\n        <h2>\n          Created by {this.state.author} on {this.state.date}\n        </h2>\n        <div className=\"single-post__image\">\n          <Image contain imageUrl={this.state.image} />\n        </div>\n        <p>{this.state.content}</p>\n      </section>\n    );\n  }\n}\n\nexport default SinglePost;\n","import React from 'react';\n\nimport './Auth.css';\n\nconst auth = props => <section className=\"auth-form\">{props.children}</section>;\n\nexport default auth;\n","import React, { Component } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nclass Login extends Component {\n  state = {\n    loginForm: {\n      email: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n      },\n      formIsValid: false\n    }\n  };\n\n  inputChangeHandler = (input, value) => {\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.loginForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.loginForm,\n        [input]: {\n          ...prevState.loginForm[input],\n          valid: isValid,\n          value: value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        loginForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        loginForm: {\n          ...prevState.loginForm,\n          [input]: {\n            ...prevState.loginForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Auth>\n        <form\n          onSubmit={e =>\n            this.props.onLogin(e, {\n              email: this.state.loginForm.email.value,\n              password: this.state.loginForm.password.value\n            })\n          }\n        >\n          <Input\n            id=\"email\"\n            label=\"Your E-Mail\"\n            type=\"email\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'email')}\n            value={this.state.loginForm['email'].value}\n            valid={this.state.loginForm['email'].valid}\n            touched={this.state.loginForm['email'].touched}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'password')}\n            value={this.state.loginForm['password'].value}\n            valid={this.state.loginForm['password'].valid}\n            touched={this.state.loginForm['password'].touched}\n          />\n          <Button design=\"raised\" type=\"submit\" loading={this.props.loading}>\n            Login\n          </Button>\n        </form>\n      </Auth>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nclass Signup extends Component {\n  state = {\n    signupForm: {\n      email: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n      },\n      name: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required]\n      },\n      formIsValid: false\n    }\n  };\n\n  inputChangeHandler = (input, value) => {\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.signupForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.signupForm,\n        [input]: {\n          ...prevState.signupForm[input],\n          valid: isValid,\n          value: value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        signupForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        signupForm: {\n          ...prevState.signupForm,\n          [input]: {\n            ...prevState.signupForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Auth>\n        <form onSubmit={e => this.props.onSignup(e, this.state)}>\n          <Input\n            id=\"email\"\n            label=\"Your E-Mail\"\n            type=\"email\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'email')}\n            value={this.state.signupForm['email'].value}\n            valid={this.state.signupForm['email'].valid}\n            touched={this.state.signupForm['email'].touched}\n          />\n          <Input\n            id=\"name\"\n            label=\"Your Name\"\n            type=\"text\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'name')}\n            value={this.state.signupForm['name'].value}\n            valid={this.state.signupForm['name'].valid}\n            touched={this.state.signupForm['name'].touched}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'password')}\n            value={this.state.signupForm['password'].value}\n            valid={this.state.signupForm['password'].valid}\n            touched={this.state.signupForm['password'].touched}\n          />\n          <Button design=\"raised\" type=\"submit\" loading={this.props.loading}>\n            Signup\n          </Button>\n        </form>\n      </Auth>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component, Fragment } from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport Backdrop from \"./components/Backdrop/Backdrop\";\nimport Toolbar from \"./components/Toolbar/Toolbar\";\nimport MainNavigation from \"./components/Navigation/MainNavigation/MainNavigation\";\nimport MobileNavigation from \"./components/Navigation/MobileNavigation/MobileNavigation\";\nimport ErrorHandler from \"./components/ErrorHandler/ErrorHandler\";\nimport FeedPage from \"./pages/Feed/Feed\";\nimport SinglePostPage from \"./pages/Feed/SinglePost/SinglePost\";\nimport LoginPage from \"./pages/Auth/Login\";\nimport SignupPage from \"./pages/Auth/Signup\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    showBackdrop: false,\n    showMobileNav: false,\n    isAuth: false,\n    token: null,\n    userId: null,\n    authLoading: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n    const expiryDate = localStorage.getItem(\"expiryDate\");\n    if (!token || !expiryDate) {\n      return;\n    }\n    if (new Date(expiryDate) <= new Date()) {\n      this.logoutHandler();\n      return;\n    }\n    const userId = localStorage.getItem(\"userId\");\n    const remainingMilliseconds =\n      new Date(expiryDate).getTime() - new Date().getTime();\n    this.setState({ isAuth: true, token: token, userId: userId });\n    this.setAutoLogout(remainingMilliseconds);\n  }\n\n  mobileNavHandler = (isOpen) => {\n    this.setState({ showMobileNav: isOpen, showBackdrop: isOpen });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({ showBackdrop: false, showMobileNav: false, error: null });\n  };\n\n  logoutHandler = () => {\n    this.setState({ isAuth: false, token: null });\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expiryDate\");\n    localStorage.removeItem(\"userId\");\n  };\n  // REST \"http://localhost:8080/auth/login\"\n  loginHandler = (event, authData) => {\n    event.preventDefault();\n    this.setState({ authLoading: true });\n\n    const graphqlQuery = {\n      query: `\n       {\n          login(email: \"${authData.email}\", password: \"${authData.password}\") {\n          token\n          userId\n        }\n      }\n    `,\n    };\n\n    fetch(\"http://localhost:8080/graphql\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((resData) => {\n        console.log(resData);\n        if (resData.errors && resData.errors[0].status === 422) {\n          throw new Error(\n            \"Validation failed. Make sure the email is not used yet!\"\n          );\n        }\n        if (resData.errors) {\n          throw new Error(\"User creation failed!\");\n        }\n        this.setState({\n          isAuth: true,\n          token: resData.data.login.token,\n          authLoading: false,\n          userId: resData.data.login.userId,\n        });\n        localStorage.setItem(\"token\", resData.data.login.token);\n        localStorage.setItem(\"userId\", resData.data.login.userId);\n        const remainingMilliseconds = 60 * 60 * 1000;\n        const expiryDate = new Date(\n          new Date().getTime() + remainingMilliseconds\n        );\n        localStorage.setItem(\"expiryDate\", expiryDate.toISOString());\n        this.setAutoLogout(remainingMilliseconds);\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          isAuth: false,\n          authLoading: false,\n          error: err,\n        });\n      });\n  };\n\n  signupHandler = (event, authData) => {\n    event.preventDefault();\n    this.setState({ authLoading: true });\n    const graphqlQuery = {\n      query: `\n      mutation {\n        createUser(userInput: {email: \"${authData.signupForm.email.value}\", name: \"${authData.signupForm.name.value}\", password: \"${authData.signupForm.password.value}\"}) {\n          _id\n          email\n        }\n      }\n      `,\n    };\n    fetch(\"http://localhost:8080/graphql\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.errors && resData.errors[0].status === 422) {\n          throw new Error(\n            \"Validation failed. Make sure the email is not used yet!\"\n          );\n        }\n        if (resData.errors) {\n          throw new Error(\"User creation failed!\");\n        }\n        console.log(resData);\n        this.setState({ isAuth: false, authLoading: false });\n        this.props.history.replace(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          isAuth: false,\n          authLoading: false,\n          error: err,\n        });\n      });\n  };\n\n  setAutoLogout = (milliseconds) => {\n    setTimeout(() => {\n      this.logoutHandler();\n    }, milliseconds);\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => (\n            <LoginPage\n              {...props}\n              onLogin={this.loginHandler}\n              loading={this.state.authLoading}\n            />\n          )}\n        />\n        <Route\n          path=\"/signup\"\n          exact\n          render={(props) => (\n            <SignupPage\n              {...props}\n              onSignup={this.signupHandler}\n              loading={this.state.authLoading}\n            />\n          )}\n        />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n    if (this.state.isAuth) {\n      routes = (\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={(props) => (\n              <FeedPage userId={this.state.userId} token={this.state.token} />\n            )}\n          />\n          <Route\n            path=\"/:postId\"\n            render={(props) => (\n              <SinglePostPage\n                {...props}\n                userId={this.state.userId}\n                token={this.state.token}\n              />\n            )}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n    return (\n      <Fragment>\n        {this.state.showBackdrop && (\n          <Backdrop onClick={this.backdropClickHandler} />\n        )}\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <Layout\n          header={\n            <Toolbar>\n              <MainNavigation\n                onOpenMobileNav={this.mobileNavHandler.bind(this, true)}\n                onLogout={this.logoutHandler}\n                isAuth={this.state.isAuth}\n              />\n            </Toolbar>\n          }\n          mobileNav={\n            <MobileNavigation\n              open={this.state.showMobileNav}\n              mobile\n              onChooseItem={this.mobileNavHandler.bind(this, false)}\n              onLogout={this.logoutHandler}\n              isAuth={this.state.isAuth}\n            />\n          }\n        />\n        {routes}\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}